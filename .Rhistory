df[i, "state"],'</p>')
})
factpal <- colorFactor(topo.colors(10), df[, variable])
map <- leaflet(df) %>%
addTiles() %>%
addCircleMarkers(radius = 1, label = lapply(labs, HTML), color = ~factpal(variable), opacity = .7) %>%
addLegend(position = "bottomleft", pal = factpal, values = ~variable, na.label = "Not Collected")
map
}
runApp()
build_map(df, raceethnicity)
build_map(df, cause)
build_map(df, cause)
build_map(df, "cause")
variable <- "cause"
df[, variable]
build_map(df, "cause")
library(leaflet)
library(stringr)
library(RColorBrewer)
library(plotly)
build_map <- function(df, variable) {
labs <- lapply(seq(nrow(df)), function(i) {
paste0( '<p>', df[i, "name"], '<p></p>',
df[i, "city"], ', ',
df[i, "state"],'</p>')
})
factpal <- colorFactor(topo.colors(5), df[, variable])
map <- leaflet(df) %>%
addTiles() %>%
addCircleMarkers(radius = 1, label = lapply(labs, HTML), color = ~factpal(variable), opacity = .7) %>%
addLegend(position = "bottomleft", pal = factpal, values = ~variable, na.label = "Not Collected")
map
}
build_map(df, "cause")
factpal <- colorFactor(topo.colors(10), df[, variable])
color = ~factpal(variable)
build_map(df, "cause")
runApp()
build_map(df, "cause")
build_map <- function(df, variable) {
labs <- lapply(seq(nrow(df)), function(i) {
paste0( '<p>', df[i, "name"], '<p></p>',
df[i, "city"], ', ',
df[i, "state"],'</p>')
})
factpal <- colorFactor(topo.colors(10), df[, variable])
map <- leaflet(df) %>%
addTiles() %>%
addCircleMarkers(radius = 1, label = lapply(labs, HTML), color = factpal(variable), opacity = .7) %>%
addLegend(position = "bottomleft", pal = factpal, values = variable, na.label = "Not Collected")
map
}
build_map(df, "cause")
build_map <- function(df, variable) {
labs <- lapply(seq(nrow(df)), function(i) {
paste0( '<p>', df[i, "name"], '<p></p>',
df[i, "city"], ', ',
df[i, "state"],'</p>')
})
factpal <- colorFactor(topo.colors(10), df[, variable])
map <- leaflet(df) %>%
addTiles() %>%
addCircleMarkers(radius = 1, label = lapply(labs, HTML), color = factpal(variable), opacity = .7) %>%
addLegend(position = "bottomleft", pal = factpal, values = ~variable, na.label = "Not Collected")
map
}
build_map(df, "cause")
build_map <- function(df, variable) {
labs <- lapply(seq(nrow(df)), function(i) {
paste0( '<p>', df[i, "name"], '<p></p>',
df[i, "city"], ', ',
df[i, "state"],'</p>')
})
factpal <- colorFactor(topo.colors(10), df[, variable])
map <- leaflet(df) %>%
addTiles() %>%
addCircleMarkers(radius = 1, label = lapply(labs, HTML), color = factpal(variable), opacity = .7) %>%
addLegend(position = "bottomleft", pal = factpal, values = ~unique(df[,variable]), na.label = "Not Collected")
map
}
build_map(df, "cause")
build_map <- function(df, variable) {
labs <- lapply(seq(nrow(df)), function(i) {
paste0( '<p>', df[i, "name"], '<p></p>',
df[i, "city"], ', ',
df[i, "state"],'</p>')
})
factpal <- colorFactor(topo.colors(10), unique(df[, variable]))
map <- leaflet(df) %>%
addTiles() %>%
addCircleMarkers(radius = 1, label = lapply(labs, HTML), color = factpal(variable), opacity = .7) %>%
addLegend(position = "bottomleft", pal = factpal, values = ~unique(df[,variable]), na.label = "Not Collected")
map
}
build_map(df, "cause")
build_map <- function(df, variable) {
labs <- lapply(seq(nrow(df)), function(i) {
paste0( '<p>', df[i, "name"], '<p></p>',
df[i, "city"], ', ',
df[i, "state"],'</p>')
})
factpal <- colorFactor(topo.colors(10), df[, variable])
map <- leaflet(df) %>%
addTiles() %>%
addCircleMarkers(radius = 1, label = lapply(labs, HTML), color = factpal(unique(df[,variable])), opacity = .7) %>%
addLegend(position = "bottomleft", pal = factpal, values = ~unique(df[,variable]), na.label = "Not Collected")
map
}
build_map(df, "cause")
runApp()
build_map <- function(df, variable) {
labs <- lapply(seq(nrow(df)), function(i) {
paste0( '<p>', df[i, "name"], '<p></p>',
df[i, "city"], ', ',
df[i, "state"],'</p>')
})
factpal <- colorFactor(topo.colors(10), df[, variable])
map <- leaflet(df) %>%
addTiles() %>%
addCircleMarkers(radius = 1, label = lapply(labs, HTML), color = factpal(unique(df[,variable])), opacity = .7) %>%
addLegend(position = "bottomleft", pal = factpal, values = ~unique(df[,variable], title = variable), na.label = "Not Collected")
map
}
build_map(df, "cause")
build_map <- function(df, variable) {
labs <- lapply(seq(nrow(df)), function(i) {
paste0( '<p>', df[i, "name"], '<p></p>',
df[i, "city"], ', ',
df[i, "state"],'</p>')
})
factpal <- colorFactor(topo.colors(10), df[, variable])
map <- leaflet(df) %>%
addTiles() %>%
addCircleMarkers(radius = 1, label = lapply(labs, HTML), color = factpal(unique(df[,variable])), opacity = .7) %>%
addLegend(position = "bottomleft", pal = factpal, values = ~unique(df[,variable]), title = variable, na.label = "Not Collected")
map
}
build_map(df, "cause")
build_map <- function(df, variable) {
labs <- lapply(seq(nrow(df)), function(i) {
paste0( '<p>', df[i, "name"], '<p></p>',
df[i, "city"], ', ',
df[i, "state"],'</p>')
})
factpal <- colorFactor(terrain.colors(10), df[, variable])
map <- leaflet(df) %>%
addTiles() %>%
addCircleMarkers(radius = 1, label = lapply(labs, HTML), color = factpal(unique(df[,variable])), opacity = .7) %>%
addLegend(position = "bottomleft", pal = factpal, values = ~unique(df[,variable]), title = variable, na.label = "Not Collected")
map
}
build_map(df, "cause")
build_map <- function(df, variable) {
labs <- lapply(seq(nrow(df)), function(i) {
paste0( '<p>', df[i, "name"], '<p></p>',
df[i, "city"], ', ',
df[i, "state"],'</p>')
})
factpal <- colorFactor(rainbow.colors(10), df[, variable])
map <- leaflet(df) %>%
addTiles() %>%
addCircleMarkers(radius = 1, label = lapply(labs, HTML), color = factpal(unique(df[,variable])), opacity = .7) %>%
addLegend(position = "bottomleft", pal = factpal, values = ~unique(df[,variable]), title = variable, na.label = "Not Collected")
map
}
build_map(df, "cause")
build_map <- function(df, variable) {
labs <- lapply(seq(nrow(df)), function(i) {
paste0( '<p>', df[i, "name"], '<p></p>',
df[i, "city"], ', ',
df[i, "state"],'</p>')
})
factpal <- colorFactor(cm.colors(10), df[, variable])
map <- leaflet(df) %>%
addTiles() %>%
addCircleMarkers(radius = 1, label = lapply(labs, HTML), color = factpal(unique(df[,variable])), opacity = .7) %>%
addLegend(position = "bottomleft", pal = factpal, values = ~unique(df[,variable]), title = variable, na.label = "Not Collected")
map
}
build_map(df, "cause")
build_map <- function(df, variable) {
labs <- lapply(seq(nrow(df)), function(i) {
paste0( '<p>', df[i, "name"], '<p></p>',
df[i, "city"], ', ',
df[i, "state"],'</p>')
})
factpal <- colorFactor(topos.colors(10), df[, variable])
map <- leaflet(df) %>%
addTiles() %>%
addCircleMarkers(radius = 1, label = lapply(labs, HTML), color = factpal(unique(df[,variable])), opacity = .7) %>%
addLegend(position = "bottomleft", pal = factpal, values = ~unique(df[,variable]), title = variable, na.label = "Not Collected")
map
}
build_map(df, "cause")
build_map <- function(df, variable) {
labs <- lapply(seq(nrow(df)), function(i) {
paste0( '<p>', df[i, "name"], '<p></p>',
df[i, "city"], ', ',
df[i, "state"],'</p>')
})
factpal <- colorFactor(topo.colors(10), df[, variable])
map <- leaflet(df) %>%
addTiles() %>%
addCircleMarkers(radius = 1, label = lapply(labs, HTML), color = factpal(unique(df[,variable])), opacity = .7) %>%
addLegend(position = "bottomleft", pal = factpal, values = ~unique(df[,variable]), title = variable, na.label = "Not Collected")
map
}
build_map(df, "cause")
build_map <- function(df, variable) {
labs <- lapply(seq(nrow(df)), function(i) {
paste0( '<p>', df[i, "name"], '<p></p>',
df[i, "city"], ', ',
df[i, "state"],'</p>')
})
factpal <- colorFactor(topo.colors(5), df[, variable])
map <- leaflet(df) %>%
addTiles() %>%
addCircleMarkers(radius = 1, label = lapply(labs, HTML), color = factpal(unique(df[,variable])), opacity = .7) %>%
addLegend(position = "bottomleft", pal = factpal, values = ~unique(df[,variable]), title = variable, na.label = "Not Collected")
map
}
build_map(df, "cause")
runApp()
runApp()
build_map <- function(df, variable) {
labs <- lapply(seq(nrow(df)), function(i) {
paste0( '<p>', df[i, "name"], '<p></p>',
df[i, "city"], ', ',
df[i, "state"],'</p>')
})
factpal <- colorFactor(topo.colors(4), df[, variable])
map <- leaflet(df) %>%
addTiles() %>%
addCircleMarkers(radius = 1, label = lapply(labs, HTML), color = factpal(unique(df[,variable])), opacity = .7) %>%
addLegend(position = "bottomleft", pal = factpal, values = ~unique(df[,variable]), title = variable, na.label = "Not Collected")
map
}
build_map(df, "cause")
runApp()
library(RColorBrewer)
build_map <- function(df, variable) {
labs <- lapply(seq(nrow(df)), function(i) {
paste0( '<p>', df[i, "name"], '<p></p>',
df[i, "city"], ', ',
df[i, "state"],'</p>')
})
factpal <- colorFactor(brewer.pal(4, "Set3"), df[, variable])
map <- leaflet(df) %>%
addTiles() %>%
addCircleMarkers(radius = 1, label = lapply(labs, HTML), color = factpal(unique(df[,variable])), opacity = .7) %>%
addLegend(position = "bottomleft", pal = factpal, values = ~unique(df[,variable]), title = variable, na.label = "Not Collected")
map
}
build_map(df, "cause")
build_map <- function(df, variable) {
labs <- lapply(seq(nrow(df)), function(i) {
paste0( '<p>', df[i, "name"], '<p></p>',
df[i, "city"], ', ',
df[i, "state"],'</p>')
})
factpal <- colorFactor(brewer.pal(4, "Set1"), df[, variable])
map <- leaflet(df) %>%
addTiles() %>%
addCircleMarkers(radius = 1, label = lapply(labs, HTML), color = factpal(unique(df[,variable])), opacity = .7) %>%
addLegend(position = "bottomleft", pal = factpal, values = ~unique(df[,variable]), title = variable, na.label = "Not Collected")
map
}
build_map(df, "cause")
runApp()
build_map <- function(df, variable) {
labs <- lapply(seq(nrow(df)), function(i) {
paste0( '<p>', df[i, "name"], '<p></p>',
df[i, "city"], ', ',
df[i, "state"],'</p>')
})
factpal <- colorFactor(brewer.pal(4, "Set1"), df[, variable])
map <- leaflet(df) %>%
addTiles() %>%
addCircleMarkers(radius = 1, label = lapply(labs, HTML), color = factpal(unique(df[,variable])), opacity = .7) %>%
addLegend(position = "bottomleft", pal = factpal, values = ~unique(df[,variable]), title = variable, na.label = "Not Collected")
map
}
build_map(df, "gender")
build_map <- function(df, variable) {
labs <- lapply(seq(nrow(df)), function(i) {
paste0( '<p>', df[i, "name"], '<p></p>',
df[i, "city"], ', ',
df[i, "state"],'</p>')
})
factpal <- colorFactor(brewer.pal(4, "Set2"), df[, variable])
map <- leaflet(df) %>%
addTiles() %>%
addCircleMarkers(radius = 1, label = lapply(labs, HTML), color = factpal(unique(df[,variable])), opacity = .7) %>%
addLegend(position = "bottomleft", pal = factpal, values = ~unique(df[,variable]), title = variable, na.label = "Not Collected")
map
}
build_map(df, "gender")
build_map(df, "cause")
build_map <- function(df, variable) {
labs <- lapply(seq(nrow(df)), function(i) {
paste0( '<p>', df[i, "name"], '<p></p>',
df[i, "city"], ', ',
df[i, "state"],'</p>')
})
factpal <- colorFactor(brewer.pal(4, "Accent"), df[, variable])
map <- leaflet(df) %>%
addTiles() %>%
addCircleMarkers(radius = 1, label = lapply(labs, HTML), color = factpal(unique(df[,variable])), opacity = .7) %>%
addLegend(position = "bottomleft", pal = factpal, values = ~unique(df[,variable]), title = variable, na.label = "Not Collected")
map
}
build_map(df, "cause")
build_map <- function(df, variable) {
labs <- lapply(seq(nrow(df)), function(i) {
paste0( '<p>', df[i, "name"], '<p></p>',
df[i, "city"], ', ',
df[i, "state"],'</p>')
})
factpal <- colorFactor(brewer.pal(10, "Accent"), df[, variable])
map <- leaflet(df) %>%
addTiles() %>%
addCircleMarkers(radius = 1, label = lapply(labs, HTML), color = factpal(unique(df[,variable])), opacity = .7) %>%
addLegend(position = "bottomleft", pal = factpal, values = ~unique(df[,variable]), title = variable, na.label = "Not Collected")
map
}
build_map(df, "cause")
build_map <- function(df, variable) {
labs <- lapply(seq(nrow(df)), function(i) {
paste0( '<p>', df[i, "name"], '<p></p>',
df[i, "city"], ', ',
df[i, "state"],'</p>')
})
factpal <- colorFactor(brewer.pal(8, "Accent"), df[, variable])
map <- leaflet(df) %>%
addTiles() %>%
addCircleMarkers(radius = 1, label = lapply(labs, HTML), color = factpal(unique(df[,variable])), opacity = .7) %>%
addLegend(position = "bottomleft", pal = factpal, values = ~unique(df[,variable]), title = variable, na.label = "Not Collected")
map
}
build_map(df, "gender")
runApp()
build_map <- function(df, variable) {
labs <- lapply(seq(nrow(df)), function(i) {
paste0( '<p>', df[i, "name"], '<p></p>',
df[i, "city"], ', ',
df[i, "state"],'</p>')
})
factpal <- colorFactor(brewer.pal(5, "Accent"), df[, variable])
map <- leaflet(df) %>%
addTiles() %>%
addCircleMarkers(radius = 1, label = lapply(labs, HTML), color = factpal(unique(df[,variable])), opacity = .7) %>%
addLegend(position = "bottomleft", pal = factpal, values = ~unique(df[,variable]), title = variable, na.label = "Not Collected")
map
}
build_map(df, "gender")
runApp()
build_map <- function(df, variable) {
labs <- lapply(seq(nrow(df)), function(i) {
paste0( '<p>', df[i, "name"], '<p></p>',
df[i, "city"], ', ',
df[i, "state"],'</p>')
})
factpal <- colorFactor(brewer.pal(5, "Dark2"), df[, variable])
map <- leaflet(df) %>%
addTiles() %>%
addCircleMarkers(radius = 1, label = lapply(labs, HTML), color = factpal(unique(df[,variable])), opacity = .7) %>%
addLegend(position = "bottomleft", pal = factpal, values = ~unique(df[,variable]), title = variable, na.label = "Not Collected")
map
}
build_map(df, "gender")
build_map <- function(df, variable) {
labs <- lapply(seq(nrow(df)), function(i) {
paste0( '<p>', df[i, "name"], '<p></p>',
df[i, "city"], ', ',
df[i, "state"],'</p>')
})
factpal <- colorFactor(brewer.pal(4, "Dark2"), df[, variable])
map <- leaflet(df) %>%
addTiles() %>%
addCircleMarkers(radius = 1, label = lapply(labs, HTML), color = factpal(unique(df[,variable])), opacity = .7) %>%
addLegend(position = "bottomleft", pal = factpal, values = ~unique(df[,variable]), title = variable, na.label = "Not Collected")
map
}
build_map(df, "gender")
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
library(dplyr)
library(ggplot2)
library(plotly)
library(RColorBrewer)
library(stringr)
library(leaflet)
Sys.setlocale(category = "LC_ALL", locale = "C")
library(shiny)
library(plotly)
library(shinythemes)
library(ggplot2)
library(dplyr)
library(ggExtra)
install.packages("ggextra")
install.packages("ggExtra")
library(ggExtra)
police_killings <- read.csv("police_killings.csv")
max_plot_1 <- function(df, input_x, input_y, input_color) {
p <- ggplot(police_killings, aes(as.numeric(input_x), as.numeric(input_y), color = input_color)) +
geom_point() +
xlim(0, max(as.numeric(police_killings[[input_x]]))) +
ylim(0, max(as.numeric(police_killings[[input_y]]))) +
xlab(input_x) +
ylab(input_y)
p <- ggMarginal(p, type = "histogram")
return(p)
}
max_plot_2 <- function(df) {
p <- ggplot()
}
library(dplyr)
library(leaflet)
source("Map Plot.R")
source("max's_scatterplot.R")
runApp()
library(dplyr)
library(ggplot2)
library(plotly)
library(RColorBrewer)
library(stringr)
library(leaflet)
Sys.setlocale(category = "LC_ALL", locale = "C")
df <- read.csv("police_killings.csv", stringsAsFactors = F)
build_map <- function(df, variable) {
labs <- lapply(seq(nrow(df)), function(i) {
paste0( '<p>', df[i, "name"], '<p></p>',
df[i, "city"], ', ',
df[i, "state"],'</p>')
})
factpal <- colorFactor(brewer.pal(4, "Dark2"), df[, variable])
map <- leaflet(df) %>%
addTiles() %>%
addCircleMarkers(radius = 1, label = lapply(labs, HTML), color = factpal(unique(df[,variable])), opacity = .7) %>%
addLegend(position = "bottomleft", pal = factpal, values = ~unique(df[,variable]), title = variable, na.label = "Not Collected")
map
}
build_map(df, "gender")
max_plot_1 <- function(df, input_x, input_y, input_color) {
p <- ggplot(police_killings, aes(as.numeric(input_x), as.numeric(input_y), color = input_color)) +
geom_point() +
xlim(0, max(as.numeric(police_killings[[input_x]]))) +
ylim(0, max(as.numeric(police_killings[[input_y]]))) +
xlab(input_x) +
ylab(input_y)
p <- ggMarginal(p, type = "histogram")
return(p)
}
max_plot_2 <- function(df) {
p <- ggplot()
}
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(police_killings)
max_plot_1 <- function(df, input_x, input_y, input_color) {
df <- na.exclude(df)
p <- ggplot(police_killings, aes(as.numeric(input_x), as.numeric(input_y), color = input_color)) +
geom_point() +
xlim(0, max(as.numeric(police_killings[[input_x]]))) +
ylim(0, max(as.numeric(police_killings[[input_y]]))) +
xlab(input_x) +
ylab(input_y)
p <- ggMarginal(p, type = "histogram")
return(p)
}
max_plot_2 <- function(df) {
p <- ggplot()
runApp()
runApp()
runApp()
runApp()
p <- ggMarginal(p, type = "histogram")
runApp()
runApp()
max_plot_2 <- function(df) {
p <- ggplot()
}
runApp()
max_plot_1 <- function(df, input_x, input_y, input_color) {
df <- na.exclude(df)
p <- ggplot(police_killings, aes(as.numeric(input_x), as.numeric(input_y), color = input_color)) +
geom_point(na.rm = T) +
xlim(0, max(as.numeric(police_killings[[input_x]]))) +
ylim(0, max(as.numeric(police_killings[[input_y]]))) +
xlab(input_x) +
ylab(input_y)
p <- ggMarginal(p, type = "histogram")
return(p)
}
max_plot_2 <- function(df) {
p <- ggplot()
}
runApp()
runApp()
runApp()
runApp()
